# This is a basic workflow to help you get started with Actions

name: run-pytest

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "pytest"
  pytest:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # 複数の Python のバージョンでテストするために `strategy.matrix` を設定する
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
        with:
          # Repository name with owner. For example, actions/checkout
          repository: ${{ github.repository }}
          # The branch, tag or SHA to checkout. When checking out the repository that triggered a workflow, this defaults to the reference or SHA for that event.  Otherwise, uses the default branch.
          token: ${{ github.token }}
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3.0.0
        with:
          # Version range or exact version of a Python version to use, using SemVer's version range syntax.
          python-version: 3.7 - 3.9
          # Used to specify a package manager for caching in the default directory. Supported values: pip, pipenv.
          cache: pipenv
          # The target architecture (x86, x64) of the Python interpreter.
          architecture: x64
          # Used to pull python distributions from actions/python-versions. Since there's a default, this is typically not supplied by the user.
          token: ${{ github.token }}
      - name: Run Tests
        run: pipenv run pytest
